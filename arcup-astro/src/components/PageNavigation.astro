---
const { currentPage } = Astro.props;

const normalizedBase = (import.meta.env.BASE_URL ?? "").replace(/\/$/, "");
const withBase = (path: string) =>
  path === "/"
    ? normalizedBase
      ? `${normalizedBase}/`
      : "/"
    : `${normalizedBase}${path}`;

// Define the page flow
const pageFlow = [
  { key: "home", label: "Define", href: withBase("/") },
  { key: "how", label: "How", href: withBase("/how") },
  { key: "why", label: "Why", href: withBase("/why") },
  { key: "projects", label: "Projects", href: withBase("/projects") },
  { key: "join", label: "Join", href: withBase("/join") },
];

// Find current page index
const currentIndex = pageFlow.findIndex(page => page.key === currentPage);
const prevPage = currentIndex > 0 ? pageFlow[currentIndex - 1] : null;
const nextPage = currentIndex < pageFlow.length - 1 ? pageFlow[currentIndex + 1] : null;
---

<nav class="page-navigation" aria-label="Page navigation">
  <div class="page-nav-container">
    {prevPage && (
      <a href={prevPage.href} class="page-nav-link page-nav-prev" aria-label={`Go to previous page: ${prevPage.label}`}>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        <div class="page-nav-content">
          <span class="page-nav-label">Previous</span>
          <span class="page-nav-title">{prevPage.label}</span>
        </div>
      </a>
    )}
    
    {!prevPage && <div class="page-nav-spacer"></div>}
    
    {nextPage && (
      <a href={nextPage.href} class="page-nav-link page-nav-next" aria-label={`Go to next page: ${nextPage.label}`}>
        <div class="page-nav-content">
          <span class="page-nav-label">Next</span>
          <span class="page-nav-title">{nextPage.label}</span>
        </div>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
          <path d="M5 12h14M12 5l7 7-7 7"/>
        </svg>
      </a>
    )}
    
    {!nextPage && <div class="page-nav-spacer"></div>}
  </div>
</nav>

<style>
  .page-navigation {
    margin-top: clamp(3rem, 7vw, 5rem);
    padding: 0 clamp(1.5rem, 4vw, 2.5rem);
  }

  .page-nav-container {
    max-width: var(--shell-width);
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
  }

  .page-nav-link {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem 2rem;
    background: rgba(6, 12, 22, 0.6);
    border: 1px solid rgba(93, 225, 228, 0.2);
    border-radius: var(--radius-lg);
    color: var(--color-text-muted);
    text-decoration: none;
    transition: all var(--transition-base);
    backdrop-filter: blur(10px);
    min-width: 200px;
    max-width: 300px;
  }

  .page-nav-link:hover {
    background: rgba(10, 147, 150, 0.15);
    border-color: var(--color-primary-bright);
    color: var(--color-text);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(10, 147, 150, 0.2);
  }

  .page-nav-prev {
    justify-content: flex-start;
  }

  .page-nav-next {
    justify-content: flex-end;
    margin-left: auto;
  }

  .page-nav-content {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .page-nav-label {
    font-size: 0.85rem;
    font-weight: 500;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .page-nav-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--color-text);
  }

  .page-nav-link:hover .page-nav-label {
    color: var(--color-primary-bright);
  }

  .page-nav-spacer {
    flex: 1;
    min-width: 200px;
  }

  .page-nav-link svg {
    flex-shrink: 0;
    opacity: 0.7;
    transition: opacity var(--transition-base);
  }

  .page-nav-link:hover svg {
    opacity: 1;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .page-navigation {
      padding: 0 1rem;
    }

    .page-nav-container {
      flex-direction: column;
      gap: 1rem;
    }

    .page-nav-link {
      width: 100%;
      max-width: none;
      min-width: auto;
      justify-content: center;
    }

    .page-nav-prev,
    .page-nav-next {
      margin: 0;
    }

    .page-nav-spacer {
      display: none;
    }
  }

  @media (max-width: 480px) {
    .page-nav-link {
      padding: 1rem 1.5rem;
      gap: 0.75rem;
    }

    .page-nav-title {
      font-size: 1rem;
    }

    .page-nav-label {
      font-size: 0.8rem;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .page-nav-link {
      transition: none;
    }
    
    .page-nav-link:hover {
      transform: none;
    }
  }

  /* Focus styles */
  .page-nav-link:focus-visible {
    outline: 2px solid var(--color-primary-bright);
    outline-offset: 2px;
  }
</style>
